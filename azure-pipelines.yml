trigger:
- main

resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '67bb67ba-9b31-4916-a3e8-869707f4ee85'
  imageRepository: 'akscodeshali'
  containerRegistry: 'codeshali.azurecr.io'
  dockerfilePath: 'src/Dockerfile'  # Path to Dockerfile in the src folder
  tag: '$(Build.BuildId)'
  imagePullSecret: 'codeshali1837ec3a-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool: self-hosted
    steps:
    
    # Step to list files in the repository for debugging purposes
    - script: |
        echo "Listing files in the repository:"
        ls -R
      displayName: 'List files in repository'
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)  # Set build context to the root of the repository
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'CodeShaliCodeShali.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)
